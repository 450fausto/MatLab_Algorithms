costs_functions = {@(x)sistema_01(x), @(x)sistema_02(x), @(x)sistema_03(x), ...
    @(x)sistema_04(x), @(x)sistema_05(x), @(x)sistema_06(x), ...
    @(x)sistema_07(x), @(x)sistema_08(x), @(x)sistema_09(x), ...
    @(x)sistema_10(x), @(x)sistema_11(x), @(x)sistema_12(x), ...
    @(x)sistema_13(x), @(x)sistema_14(x), @(x)sistema_15(x), ...
    @(x)sistema_16(x), @(x)sistema_17(x), @(x)sistema_18(x), ...
    @(x)sistema_19(x), @(x)sistema_20(x), @(x)sistema_21(x), ...
    @(x)sistema_22(x), @(x)sistema_23(x), @(x)sistema_24(x), ...
    @(x)sistema_25(x), @(x)sistema_26(x), @(x)sistema_27(x), ...
    @(x)sistema_28(x), @(x)sistema_29(x), @(x)sistema_30(x), ...
    @(x)sistema_31(x), @(x)sistema_32(x), @(x)sistema_33(x), ...
    @(x)sistema_34(x), @(x)sistema_35(x), @(x)sistema_36(x), ...
    @(x)sistema_37(x), @(x)sistema_38(x), @(x)sistema_39(x)};

num_vars = [1,2,7,1,8,9,2,2,4,2,2,1,3,4,5,3,4,2,3,3,1,1,2,1,1,2,1,2,1,1,1,1,1,1,2,1,1,1,2];

fun_obj = [];
Sols = {};

for f = 1:39
    f
    [solucion,~]=differential_evolution(costs_functions{f},zeros(1,num_vars(f)),ones(1,num_vars(f)),100,1000)
    Sols{f} = solucion;
end